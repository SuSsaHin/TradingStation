ѕоиск экстремума первого пор€дка:
Ёкстремум первого пор€дка создаетс€ тройкой свечей таких, что:
	MidCandle.high>RightCandle.high
	MidCandle.high>LeftCandle.high
	MidCandle.low>=RightCandle.low
	MidCandle.low>=LeftCandle.low
ѕри этом временем по€влени€ экстремума считаетс€ врем€ по€влени€ MidCandle, 
также экстремум хранит CheckerIndex - пор€дковый номер RightCandle счита€ от начала дн€.

ѕри добавлении RC, если три свечи не образуют экстремума и RC не внешн€€ и не внутренн€€, то пропускаютс€ все 3 и прога уже не пытаетс€ дальше перебирать RC.

≈сли одна MC образует несколько экстремумов первого пор€дка, то хранитс€ только один из них.

ћаксимум второго пор€дка образуетс€ такис максимумом первого пор€дка, что с обеих сторон от него наход€тс€ строго меньшие максимумы первого пор€дка.
Ќо в последовательности максимумов a-b-b-c, где a<b>c после по€влени€ c засчитывалс€ максимум второго пор€дка. (¬ыполн€етс€ только дл€ 2-х b, т.е. a-b-b-b-c - не максимум). 
¬рем€ по€влени€ считаетс€ по второй свече.

≈сли обнаруживаетс€ новый экстремум 1-го пор€деа такой, что существует хот€ бы один экстремум, чьЄ врем€ по€влени€ больше, а CheckerIndex меньше, 
то обнаруженный экстремум не может стать экстремумом второго пор€дка.

—татистическа€ проверка:
ѕо центральной предельной теореме ћќ выборок из генеральной совокупности распределены нормально со стандартной ошибкой SE = SD/sqrt(n-1), где n - объем выборок.

//TODO DistFromOpen

–езультаты:
ќграничение на количество пропущенных свечей результата не приносит